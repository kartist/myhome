<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.angelachen.myhome.mapper.UserEntityMapper" >
	<resultMap id="BaseResultMap" type="com.angelachen.myhome.entity.UserEntity" >
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="note" jdbcType="VARCHAR" property="note" />
		<result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime" />
		<result column="showBack" jdbcType="INTEGER" property="showBack" />
	</resultMap >
	<sql id="Example_Where_Clause" >
		<where >
			<foreach collection="oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" prefixOverrides="and" suffix=")" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
									and ${criterion.condition}
								</when >
								<when test="criterion.singleValue" >
									and ${criterion.condition} #{criterion.value}
								</when >
								<when test="criterion.betweenValue" >
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when >
								<when test="criterion.listValue" >
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
									         separator="," >
										#{listItem}
									</foreach >
								</when >
							</choose >
						</foreach >
					</trim >
				</if >
			</foreach >
		</where >
	</sql >
	<sql id="Update_By_Example_Where_Clause" >
		<where >
			<foreach collection="example.oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" prefixOverrides="and" suffix=")" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
									and ${criterion.condition}
								</when >
								<when test="criterion.singleValue" >
									and ${criterion.condition} #{criterion.value}
								</when >
								<when test="criterion.betweenValue" >
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when >
								<when test="criterion.listValue" >
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
									         separator="," >
										#{listItem}
									</foreach >
								</when >
							</choose >
						</foreach >
					</trim >
				</if >
			</foreach >
		</where >
	</sql >
	<sql id="Base_Column_List" >
    id, createTime, name, password, phone, address, note, lastLoginTime ,showBack
  </sql >
	<select id="selectByExample" parameterType="com.angelachen.myhome.entity.UserEntityExample"
	        resultMap="BaseResultMap" >
		select
		<if test="distinct" >
			distinct
		</if >
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if >
		<if test="orderByClause != null" >
			order by ${orderByClause}
		</if >
	</select >
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select >
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete >
	<delete id="deleteByExample" parameterType="com.angelachen.myhome.entity.UserEntityExample" >
		delete from user
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if >
	</delete >
	<insert id="insert" parameterType="com.angelachen.myhome.entity.UserEntity" >
    insert into user (id, createTime, name, 
      password, phone, address, 
      note, lastLoginTime)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP})
  </insert >
	<insert id="insertSelective" parameterType="com.angelachen.myhome.entity.UserEntity" >
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				id,
			</if >
			<if test="createTime != null" >
				createTime,
			</if >
			<if test="name != null" >
				name,
			</if >
			<if test="password != null" >
				password,
			</if >
			<if test="phone != null" >
				phone,
			</if >
			<if test="address != null" >
				address,
			</if >
			<if test="note != null" >
				note,
			</if >
			<if test="lastLoginTime != null" >
				lastLoginTime,
			</if >
		</trim >
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				#{id,jdbcType=INTEGER},
			</if >
			<if test="createTime != null" >
				#{createTime,jdbcType=TIMESTAMP},
			</if >
			<if test="name != null" >
				#{name,jdbcType=VARCHAR},
			</if >
			<if test="password != null" >
				#{password,jdbcType=VARCHAR},
			</if >
			<if test="phone != null" >
				#{phone,jdbcType=VARCHAR},
			</if >
			<if test="address != null" >
				#{address,jdbcType=VARCHAR},
			</if >
			<if test="note != null" >
				#{note,jdbcType=VARCHAR},
			</if >
			<if test="lastLoginTime != null" >
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if >
		</trim >
	</insert >
	<select id="countByExample" parameterType="com.angelachen.myhome.entity.UserEntityExample"
	        resultType="java.lang.Long" >
		select count(*) from user
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if >
	</select >
	<select id="selectByUserName" resultType="com.angelachen.myhome.entity.UserEntity" >
		select
		<include refid="Base_Column_List" />
		from user
		where name = #{userName}
	</select >
	<update id="updateByExampleSelective" parameterType="map" >
		update user
		<set >
			<if test="record.id != null" >
				id = #{record.id,jdbcType=INTEGER},
			</if >
			<if test="record.createTime != null" >
				createTime = #{record.createTime,jdbcType=TIMESTAMP},
			</if >
			<if test="record.name != null" >
				name = #{record.name,jdbcType=VARCHAR},
			</if >
			<if test="record.password != null" >
				password = #{record.password,jdbcType=VARCHAR},
			</if >
			<if test="record.phone != null" >
				phone = #{record.phone,jdbcType=VARCHAR},
			</if >
			<if test="record.address != null" >
				address = #{record.address,jdbcType=VARCHAR},
			</if >
			<if test="record.note != null" >
				note = #{record.note,jdbcType=VARCHAR},
			</if >
			<if test="record.lastLoginTime != null" >
				lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP},
			</if >
		</set >
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if >
	</update >
	<update id="updateByExample" parameterType="map" >
		update user
		set id = #{record.id,jdbcType=INTEGER},
		createTime = #{record.createTime,jdbcType=TIMESTAMP},
		name = #{record.name,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		address = #{record.address,jdbcType=VARCHAR},
		note = #{record.note,jdbcType=VARCHAR},
		lastLoginTime = #{record.lastLoginTime,jdbcType=TIMESTAMP}
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if >
	</update >
	<update id="updateByPrimaryKeySelective" parameterType="com.angelachen.myhome.entity.UserEntity" >
		update user
		<set >
			<if test="createTime != null" >
				createTime = #{createTime,jdbcType=TIMESTAMP},
			</if >
			<if test="name != null" >
				name = #{name,jdbcType=VARCHAR},
			</if >
			<if test="password != null" >
				password = #{password,jdbcType=VARCHAR},
			</if >
			<if test="phone != null" >
				phone = #{phone,jdbcType=VARCHAR},
			</if >
			<if test="address != null" >
				address = #{address,jdbcType=VARCHAR},
			</if >
			<if test="note != null" >
				note = #{note,jdbcType=VARCHAR},
			</if >
			<if test="lastLoginTime != null" >
				lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if >
			<if test="showBack != null" >
				showBack = #{showBack,jdbcType=INTEGER},
			</if >
		</set >
		where id = #{id,jdbcType=INTEGER}
	</update >
	<update id="updateByPrimaryKey" parameterType="com.angelachen.myhome.entity.UserEntity" >
    update user
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      showBack = #{showBack,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update >
</mapper >