<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.angelachen.myhome.mapper.ImageLibMapper" >
	<resultMap id="BaseResultMap" type="com.angelachen.myhome.entity.ImageLibEntity" >
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
		<result column="createUser" jdbcType="INTEGER" property="createUser" />
		<result column="isDelete" jdbcType="TINYINT" property="delete" />
		<result column="path" jdbcType="VARCHAR" property="path" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="description" jdbcType="VARCHAR" property="description" />
	</resultMap >
	<sql id="Example_Where_Clause" >
		<where >
			<foreach collection="oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" prefixOverrides="and" suffix=")" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
									and ${criterion.condition}
								</when >
								<when test="criterion.singleValue" >
									and ${criterion.condition} #{criterion.value}
								</when >
								<when test="criterion.betweenValue" >
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when >
								<when test="criterion.listValue" >
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
									         separator="," >
										#{listItem}
									</foreach >
								</when >
							</choose >
						</foreach >
					</trim >
				</if >
			</foreach >
		</where >
	</sql >
	<sql id="Update_By_Example_Where_Clause" >
		<where >
			<foreach collection="example.oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" prefixOverrides="and" suffix=")" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
									and ${criterion.condition}
								</when >
								<when test="criterion.singleValue" >
									and ${criterion.condition} #{criterion.value}
								</when >
								<when test="criterion.betweenValue" >
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when >
								<when test="criterion.listValue" >
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem" open="("
									         separator="," >
										#{listItem}
									</foreach >
								</when >
							</choose >
						</foreach >
					</trim >
				</if >
			</foreach >
		</where >
	</sql >
	<sql id="Base_Column_List" >
    id, createTime, createUser, isDelete, path, title, description
  </sql >
	<select id="selectByExample" parameterType="com.angelachen.myhome.entity.ImageLibExample"
	        resultMap="BaseResultMap" >
		select
		<if test="distinct" >
			distinct
		</if >
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from image_lib
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if >
		<if test="orderByClause != null" >
			order by ${orderByClause}
		</if >
	</select >
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
		select
		<include refid="Base_Column_List" />
		from image_lib
		where id = #{id,jdbcType=INTEGER}
	</select >
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from image_lib
    where id = #{id,jdbcType=INTEGER}
  </delete >
	<delete id="deleteByExample" parameterType="com.angelachen.myhome.entity.ImageLibExample" >
		delete from image_lib
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if >
	</delete >
	<insert id="insert" parameterType="com.angelachen.myhome.entity.ImageLibEntity" >
    insert into image_lib (id, createTime, createUser, 
      isDelete, path, title, 
      description)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{delete,jdbcType=TINYINT}, #{path,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert >
	<insert id="insertSelective" parameterType="com.angelachen.myhome.entity.ImageLibEntity" >
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
			SELECT LAST_INSERT_ID()
		</selectKey >
		insert into image_lib
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				id,
			</if >
			<if test="createTime != null" >
				createTime,
			</if >
			<if test="createUser != null" >
				createUser,
			</if >
			<if test="delete != null" >
				isDelete,
			</if >
			<if test="path != null" >
				path,
			</if >
			<if test="title != null" >
				title,
			</if >
			<if test="description != null" >
				description,
			</if >
		</trim >
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="id != null" >
				#{id,jdbcType=INTEGER},
			</if >
			<if test="createTime != null" >
				#{createTime,jdbcType=TIMESTAMP},
			</if >
			<if test="createUser != null" >
				#{createUser,jdbcType=INTEGER},
			</if >
			<if test="delete != null" >
				#{delete,jdbcType=TINYINT},
			</if >
			<if test="path != null" >
				#{path,jdbcType=VARCHAR},
			</if >
			<if test="title != null" >
				#{title,jdbcType=VARCHAR},
			</if >
			<if test="description != null" >
				#{description,jdbcType=VARCHAR},
			</if >
		</trim >
	</insert >
	<select id="countByExample" parameterType="com.angelachen.myhome.entity.ImageLibExample"
	        resultType="java.lang.Long" >
		select count(*) from image_lib
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if >
	</select >
	<update id="updateByExampleSelective" parameterType="map" >
		update image_lib
		<set >
			<if test="record.id != null" >
				id = #{record.id,jdbcType=INTEGER},
			</if >
			<if test="record.createTime != null" >
				createTime = #{record.createTime,jdbcType=TIMESTAMP},
			</if >
			<if test="record.createUser != null" >
				createUser = #{record.createUser,jdbcType=INTEGER},
			</if >
			<if test="record.delete != null" >
				isDelete = #{record.delete,jdbcType=TINYINT},
			</if >
			<if test="record.path != null" >
				path = #{record.path,jdbcType=VARCHAR},
			</if >
			<if test="record.title != null" >
				title = #{record.title,jdbcType=VARCHAR},
			</if >
			<if test="record.description != null" >
				description = #{record.description,jdbcType=VARCHAR},
			</if >
		</set >
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if >
	</update >
	<update id="updateByExample" parameterType="map" >
		update image_lib
		set id = #{record.id,jdbcType=INTEGER},
		createTime = #{record.createTime,jdbcType=TIMESTAMP},
		createUser = #{record.createUser,jdbcType=INTEGER},
		isDelete = #{record.delete,jdbcType=TINYINT},
		path = #{record.path,jdbcType=VARCHAR},
		title = #{record.title,jdbcType=VARCHAR},
		description = #{record.description,jdbcType=VARCHAR}
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if >
	</update >
	<update id="updateByPrimaryKeySelective" parameterType="com.angelachen.myhome.entity.ImageLibEntity" >
		update image_lib
		<set >
			<if test="createTime != null" >
				createTime = #{createTime,jdbcType=TIMESTAMP},
			</if >
			<if test="createUser != null" >
				createUser = #{createUser,jdbcType=INTEGER},
			</if >
			<if test="delete != null" >
				isDelete = #{delete,jdbcType=TINYINT},
			</if >
			<if test="path != null" >
				path = #{path,jdbcType=VARCHAR},
			</if >
			<if test="title != null" >
				title = #{title,jdbcType=VARCHAR},
			</if >
			<if test="description != null" >
				description = #{description,jdbcType=VARCHAR},
			</if >
		</set >
		where id = #{id,jdbcType=INTEGER}
	</update >
	<update id="updateByPrimaryKey" parameterType="com.angelachen.myhome.entity.ImageLibEntity" >
    update image_lib
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      createUser = #{createUser,jdbcType=INTEGER},
      isDelete = #{delete,jdbcType=TINYINT},
      path = #{path,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update >
</mapper >